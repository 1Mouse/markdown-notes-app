{"id":"mMVJ","dependencies":[{"name":"E:\\Projects\\markdown-notes-app\\package.json","includedInParent":true,"mtime":1666714498935},{"name":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\package.json","includedInParent":true,"mtime":1666394443373}],"generated":{"js":"\"use strict\";\n/* jshint browser: true */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCaretCoordinates = void 0;\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n    \"direction\",\n    \"boxSizing\",\n    \"width\",\n    \"height\",\n    \"overflowX\",\n    \"overflowY\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\"\n];\nvar isBrowser = typeof window !== \"undefined\";\nvar isFirefox = isBrowser && window.mozInnerScreenX != null;\nfunction getCaretCoordinates(element, append) {\n    if (!isBrowser) {\n        throw new Error(\"getCaretCoordinates should only be called in a browser\");\n    }\n    // The mirror div will replicate the textarea's style\n    var div = document.createElement(\"div\");\n    div.id = \"input-textarea-caret-position-mirror-div\";\n    document.body.appendChild(div);\n    var style = div.style;\n    var computed = window.getComputedStyle\n        ? window.getComputedStyle(element)\n        : element.currentStyle; // currentStyle for IE < 9\n    // Default textarea styles\n    style.whiteSpace = \"pre-wrap\";\n    style.wordWrap = \"break-word\"; // only for textarea-s\n    // Position off-screen\n    style.position = \"absolute\"; // required to return coordinates properly\n    style.visibility = \"hidden\"; // not 'display: none' because we want rendering\n    // Transfer the element's properties to the div\n    properties.forEach(function (prop) {\n        style[prop] = computed[prop];\n    });\n    if (isFirefox) {\n        // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n        if (element.scrollHeight > parseInt(computed.height))\n            style.overflowY = \"scroll\";\n    }\n    else {\n        style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n    }\n    div.textContent = element.value.substring(0, element.selectionStart);\n    if (append) {\n        div.textContent += append;\n    }\n    var span = document.createElement(\"span\");\n    // Wrapping must be replicated *exactly*, including when a long word gets\n    // onto the next line, with whitespace at the end of the line before (#7).\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\n    // textarea's content into the <span> created at the caret position.\n    // For inputs, just '.' would be enough, but no need to bother.\n    span.textContent = element.value.substring(element.selectionEnd) || \".\"; // || because a completely empty faux span doesn't render at all\n    div.appendChild(span);\n    var coordinates = {\n        top: span.offsetTop + parseInt(computed[\"borderTopWidth\"]),\n        left: span.offsetLeft + parseInt(computed[\"borderLeftWidth\"]),\n        lineHeight: parseInt(computed[\"lineHeight\"])\n    };\n    document.body.removeChild(div);\n    return coordinates;\n}\nexports.getCaretCoordinates = getCaretCoordinates;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}}],"sources":{"node_modules/react-mde/lib/js/util/TextAreaCaretPosition.js":"\"use strict\";\n/* jshint browser: true */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCaretCoordinates = void 0;\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n    \"direction\",\n    \"boxSizing\",\n    \"width\",\n    \"height\",\n    \"overflowX\",\n    \"overflowY\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\"\n];\nvar isBrowser = typeof window !== \"undefined\";\nvar isFirefox = isBrowser && window.mozInnerScreenX != null;\nfunction getCaretCoordinates(element, append) {\n    if (!isBrowser) {\n        throw new Error(\"getCaretCoordinates should only be called in a browser\");\n    }\n    // The mirror div will replicate the textarea's style\n    var div = document.createElement(\"div\");\n    div.id = \"input-textarea-caret-position-mirror-div\";\n    document.body.appendChild(div);\n    var style = div.style;\n    var computed = window.getComputedStyle\n        ? window.getComputedStyle(element)\n        : element.currentStyle; // currentStyle for IE < 9\n    // Default textarea styles\n    style.whiteSpace = \"pre-wrap\";\n    style.wordWrap = \"break-word\"; // only for textarea-s\n    // Position off-screen\n    style.position = \"absolute\"; // required to return coordinates properly\n    style.visibility = \"hidden\"; // not 'display: none' because we want rendering\n    // Transfer the element's properties to the div\n    properties.forEach(function (prop) {\n        style[prop] = computed[prop];\n    });\n    if (isFirefox) {\n        // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n        if (element.scrollHeight > parseInt(computed.height))\n            style.overflowY = \"scroll\";\n    }\n    else {\n        style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n    }\n    div.textContent = element.value.substring(0, element.selectionStart);\n    if (append) {\n        div.textContent += append;\n    }\n    var span = document.createElement(\"span\");\n    // Wrapping must be replicated *exactly*, including when a long word gets\n    // onto the next line, with whitespace at the end of the line before (#7).\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\n    // textarea's content into the <span> created at the caret position.\n    // For inputs, just '.' would be enough, but no need to bother.\n    span.textContent = element.value.substring(element.selectionEnd) || \".\"; // || because a completely empty faux span doesn't render at all\n    div.appendChild(span);\n    var coordinates = {\n        top: span.offsetTop + parseInt(computed[\"borderTopWidth\"]),\n        left: span.offsetLeft + parseInt(computed[\"borderLeftWidth\"]),\n        lineHeight: parseInt(computed[\"lineHeight\"])\n    };\n    document.body.removeChild(div);\n    return coordinates;\n}\nexports.getCaretCoordinates = getCaretCoordinates;\n"},"lineCount":96}},"error":null,"hash":"95c24446aeef33f5830f7188492bd2aa","cacheData":{"env":{}}}