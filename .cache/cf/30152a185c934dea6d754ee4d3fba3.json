{"id":"rV0s","dependencies":[{"name":"E:\\Projects\\markdown-notes-app\\package.json","includedInParent":true,"mtime":1666714498935},{"name":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\package.json","includedInParent":true,"mtime":1666394443373}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBreaksNeededForEmptyLineAfter = exports.getBreaksNeededForEmptyLineBefore = exports.selectWord = exports.getSurroundingWord = void 0;\nfunction getSurroundingWord(text, position) {\n    if (!text)\n        throw Error(\"Argument 'text' should be truthy\");\n    var isWordDelimiter = function (c) { return c === \" \" || c.charCodeAt(0) === 10; };\n    // leftIndex is initialized to 0 because if selection is 0, it won't even enter the iteration\n    var start = 0;\n    // rightIndex is initialized to text.length because if selection is equal to text.length it won't even enter the interation\n    var end = text.length;\n    // iterate to the left\n    for (var i = position; i - 1 > -1; i--) {\n        if (isWordDelimiter(text[i - 1])) {\n            start = i;\n            break;\n        }\n    }\n    // iterate to the right\n    for (var i = position; i < text.length; i++) {\n        if (isWordDelimiter(text[i])) {\n            end = i;\n            break;\n        }\n    }\n    return { start: start, end: end };\n}\nexports.getSurroundingWord = getSurroundingWord;\n/**\n * If the cursor is inside a word and (selection.start === selection.end)\n * returns a new Selection where the whole word is selected\n * @param text\n * @param selection\n */\nfunction selectWord(_a) {\n    var text = _a.text, selection = _a.selection;\n    if (text && text.length && selection.start === selection.end) {\n        // the user is pointing to a word\n        return getSurroundingWord(text, selection.start);\n    }\n    return selection;\n}\nexports.selectWord = selectWord;\n/**\n *  Gets the number of line-breaks that would have to be inserted before the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the previous text\n */\nfunction getBreaksNeededForEmptyLineBefore(text, startPosition) {\n    if (text === void 0) { text = \"\"; }\n    if (startPosition === 0)\n        return 0;\n    // rules:\n    // - If we're in the first line, no breaks are needed\n    // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n    //      may need to insert 0, 1 or 2 breaks\n    var neededBreaks = 2;\n    var isInFirstLine = true;\n    for (var i = startPosition - 1; i >= 0 && neededBreaks >= 0; i--) {\n        switch (text.charCodeAt(i)) {\n            case 32: // blank space\n                continue;\n            case 10: // line break\n                neededBreaks--;\n                isInFirstLine = false;\n                break;\n            default:\n                return neededBreaks;\n        }\n    }\n    return isInFirstLine ? 0 : neededBreaks;\n}\nexports.getBreaksNeededForEmptyLineBefore = getBreaksNeededForEmptyLineBefore;\n/**\n *  Gets the number of line-breaks that would have to be inserted after the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the next text\n */\nfunction getBreaksNeededForEmptyLineAfter(text, startPosition) {\n    if (text === void 0) { text = \"\"; }\n    if (startPosition === text.length - 1)\n        return 0;\n    // rules:\n    // - If we're in the first line, no breaks are needed\n    // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n    //      may need to insert 0, 1 or 2 breaks\n    var neededBreaks = 2;\n    var isInLastLine = true;\n    for (var i = startPosition; i < text.length && neededBreaks >= 0; i++) {\n        switch (text.charCodeAt(i)) {\n            case 32:\n                continue;\n            case 10: {\n                neededBreaks--;\n                isInLastLine = false;\n                break;\n            }\n            default:\n                return neededBreaks;\n        }\n    }\n    return isInLastLine ? 0 : neededBreaks;\n}\nexports.getBreaksNeededForEmptyLineAfter = getBreaksNeededForEmptyLineAfter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/react-mde/lib/js/util/MarkdownUtil.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"node_modules/react-mde/lib/js/util/MarkdownUtil.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBreaksNeededForEmptyLineAfter = exports.getBreaksNeededForEmptyLineBefore = exports.selectWord = exports.getSurroundingWord = void 0;\nfunction getSurroundingWord(text, position) {\n    if (!text)\n        throw Error(\"Argument 'text' should be truthy\");\n    var isWordDelimiter = function (c) { return c === \" \" || c.charCodeAt(0) === 10; };\n    // leftIndex is initialized to 0 because if selection is 0, it won't even enter the iteration\n    var start = 0;\n    // rightIndex is initialized to text.length because if selection is equal to text.length it won't even enter the interation\n    var end = text.length;\n    // iterate to the left\n    for (var i = position; i - 1 > -1; i--) {\n        if (isWordDelimiter(text[i - 1])) {\n            start = i;\n            break;\n        }\n    }\n    // iterate to the right\n    for (var i = position; i < text.length; i++) {\n        if (isWordDelimiter(text[i])) {\n            end = i;\n            break;\n        }\n    }\n    return { start: start, end: end };\n}\nexports.getSurroundingWord = getSurroundingWord;\n/**\n * If the cursor is inside a word and (selection.start === selection.end)\n * returns a new Selection where the whole word is selected\n * @param text\n * @param selection\n */\nfunction selectWord(_a) {\n    var text = _a.text, selection = _a.selection;\n    if (text && text.length && selection.start === selection.end) {\n        // the user is pointing to a word\n        return getSurroundingWord(text, selection.start);\n    }\n    return selection;\n}\nexports.selectWord = selectWord;\n/**\n *  Gets the number of line-breaks that would have to be inserted before the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the previous text\n */\nfunction getBreaksNeededForEmptyLineBefore(text, startPosition) {\n    if (text === void 0) { text = \"\"; }\n    if (startPosition === 0)\n        return 0;\n    // rules:\n    // - If we're in the first line, no breaks are needed\n    // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n    //      may need to insert 0, 1 or 2 breaks\n    var neededBreaks = 2;\n    var isInFirstLine = true;\n    for (var i = startPosition - 1; i >= 0 && neededBreaks >= 0; i--) {\n        switch (text.charCodeAt(i)) {\n            case 32: // blank space\n                continue;\n            case 10: // line break\n                neededBreaks--;\n                isInFirstLine = false;\n                break;\n            default:\n                return neededBreaks;\n        }\n    }\n    return isInFirstLine ? 0 : neededBreaks;\n}\nexports.getBreaksNeededForEmptyLineBefore = getBreaksNeededForEmptyLineBefore;\n/**\n *  Gets the number of line-breaks that would have to be inserted after the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the next text\n */\nfunction getBreaksNeededForEmptyLineAfter(text, startPosition) {\n    if (text === void 0) { text = \"\"; }\n    if (startPosition === text.length - 1)\n        return 0;\n    // rules:\n    // - If we're in the first line, no breaks are needed\n    // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n    //      may need to insert 0, 1 or 2 breaks\n    var neededBreaks = 2;\n    var isInLastLine = true;\n    for (var i = startPosition; i < text.length && neededBreaks >= 0; i++) {\n        switch (text.charCodeAt(i)) {\n            case 32:\n                continue;\n            case 10: {\n                neededBreaks--;\n                isInLastLine = false;\n                break;\n            }\n            default:\n                return neededBreaks;\n        }\n    }\n    return isInLastLine ? 0 : neededBreaks;\n}\nexports.getBreaksNeededForEmptyLineAfter = getBreaksNeededForEmptyLineAfter;\n"},"lineCount":103}},"error":null,"hash":"7938f70bc518d199d3fbe030c1105642","cacheData":{"env":{}}}