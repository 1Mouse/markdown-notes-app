{"id":"vPBe","dependencies":[{"name":"E:\\Projects\\markdown-notes-app\\package.json","includedInParent":true,"mtime":1666714498935},{"name":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\package.json","includedInParent":true,"mtime":1666394443373},{"name":"../../util/MarkdownUtil","loc":{"line":4,"column":29,"index":253},"parent":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\lib\\js\\commands\\default-commands\\listCommands.js","resolved":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\lib\\js\\util\\MarkdownUtil.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkedListCommand = exports.orderedListCommand = exports.unorderedListCommand = exports.makeList = exports.insertBeforeEachLine = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\n/**\n * Inserts insertionString before each line\n */\nfunction insertBeforeEachLine(selectedText, insertBefore) {\n    var lines = selectedText.split(/\\n/);\n    var insertionLength = 0;\n    var modifiedText = lines\n        .map(function (item, index) {\n        if (typeof insertBefore === \"string\") {\n            insertionLength += insertBefore.length;\n            return insertBefore + item;\n        }\n        else if (typeof insertBefore === \"function\") {\n            var insertionResult = insertBefore(item, index);\n            insertionLength += insertionResult.length;\n            return insertBefore(item, index) + item;\n        }\n        throw Error(\"insertion is expected to be either a string or a function\");\n    })\n        .join(\"\\n\");\n    return { modifiedText: modifiedText, insertionLength: insertionLength };\n}\nexports.insertBeforeEachLine = insertBeforeEachLine;\nvar makeList = function (state0, api, insertBefore) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = MarkdownUtil_1.selectWord({\n        text: state0.text,\n        selection: state0.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = MarkdownUtil_1.getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n    var breaksAfterCount = MarkdownUtil_1.getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n    var modifiedText = insertBeforeEachLine(state1.selectedText, insertBefore);\n    api.replaceSelection(\"\" + breaksBefore + modifiedText.modifiedText + breaksAfter);\n    // Specifically when the text has only one line, we can exclude the \"- \", for example, from the selection\n    var oneLinerOffset = state1.selectedText.indexOf(\"\\n\") === -1 ? modifiedText.insertionLength : 0;\n    var selectionStart = state1.selection.start + breaksBeforeCount + oneLinerOffset;\n    var selectionEnd = selectionStart + modifiedText.modifiedText.length - oneLinerOffset;\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n        start: selectionStart,\n        end: selectionEnd\n    });\n};\nexports.makeList = makeList;\nexports.unorderedListCommand = {\n    buttonProps: { \"aria-label\": \"Add unordered list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, \"- \");\n    }\n};\nexports.orderedListCommand = {\n    buttonProps: { \"aria-label\": \"Add ordered list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, function (item, index) { return index + 1 + \". \"; });\n    }\n};\nexports.checkedListCommand = {\n    buttonProps: { \"aria-label\": \"Add checked list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, function (item, index) { return \"- [ ] \"; });\n    }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/react-mde/lib/js/commands/default-commands/listCommands.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkedListCommand = exports.orderedListCommand = exports.unorderedListCommand = exports.makeList = exports.insertBeforeEachLine = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\n/**\n * Inserts insertionString before each line\n */\nfunction insertBeforeEachLine(selectedText, insertBefore) {\n    var lines = selectedText.split(/\\n/);\n    var insertionLength = 0;\n    var modifiedText = lines\n        .map(function (item, index) {\n        if (typeof insertBefore === \"string\") {\n            insertionLength += insertBefore.length;\n            return insertBefore + item;\n        }\n        else if (typeof insertBefore === \"function\") {\n            var insertionResult = insertBefore(item, index);\n            insertionLength += insertionResult.length;\n            return insertBefore(item, index) + item;\n        }\n        throw Error(\"insertion is expected to be either a string or a function\");\n    })\n        .join(\"\\n\");\n    return { modifiedText: modifiedText, insertionLength: insertionLength };\n}\nexports.insertBeforeEachLine = insertBeforeEachLine;\nvar makeList = function (state0, api, insertBefore) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = MarkdownUtil_1.selectWord({\n        text: state0.text,\n        selection: state0.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = MarkdownUtil_1.getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n    var breaksAfterCount = MarkdownUtil_1.getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n    var modifiedText = insertBeforeEachLine(state1.selectedText, insertBefore);\n    api.replaceSelection(\"\" + breaksBefore + modifiedText.modifiedText + breaksAfter);\n    // Specifically when the text has only one line, we can exclude the \"- \", for example, from the selection\n    var oneLinerOffset = state1.selectedText.indexOf(\"\\n\") === -1 ? modifiedText.insertionLength : 0;\n    var selectionStart = state1.selection.start + breaksBeforeCount + oneLinerOffset;\n    var selectionEnd = selectionStart + modifiedText.modifiedText.length - oneLinerOffset;\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n        start: selectionStart,\n        end: selectionEnd\n    });\n};\nexports.makeList = makeList;\nexports.unorderedListCommand = {\n    buttonProps: { \"aria-label\": \"Add unordered list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, \"- \");\n    }\n};\nexports.orderedListCommand = {\n    buttonProps: { \"aria-label\": \"Add ordered list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, function (item, index) { return index + 1 + \". \"; });\n    }\n};\nexports.checkedListCommand = {\n    buttonProps: { \"aria-label\": \"Add checked list\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        exports.makeList(initialState, textApi, function (item, index) { return \"- [ ] \"; });\n    }\n};\n"},"lineCount":73}},"error":null,"hash":"d43d6a4fad0d39b07d92c7f567f2a61b","cacheData":{"env":{}}}