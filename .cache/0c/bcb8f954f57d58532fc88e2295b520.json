{"id":"pzUC","dependencies":[{"name":"E:\\Projects\\markdown-notes-app\\package.json","includedInParent":true,"mtime":1666714498935},{"name":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\package.json","includedInParent":true,"mtime":1666394443373},{"name":"../../util/MarkdownUtil","loc":{"line":4,"column":29,"index":136},"parent":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\lib\\js\\commands\\default-commands\\boldCommand.js","resolved":"E:\\Projects\\markdown-notes-app\\node_modules\\react-mde\\lib\\js\\util\\MarkdownUtil.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boldCommand = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\nexports.boldCommand = {\n    buttonProps: { \"aria-label\": \"Add bold text\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        // Adjust the selection to encompass the whole word if the caret is inside one\n        var newSelectionRange = MarkdownUtil_1.selectWord({\n            text: initialState.text,\n            selection: initialState.selection\n        });\n        var state1 = textApi.setSelectionRange(newSelectionRange);\n        // Replaces the current selection with the bold mark up\n        var state2 = textApi.replaceSelection(\"**\" + state1.selectedText + \"**\");\n        // Adjust the selection to not contain the **\n        textApi.setSelectionRange({\n            start: state2.selection.end - 2 - state1.selectedText.length,\n            end: state2.selection.end - 2\n        });\n    },\n    handleKeyCommand: function (e) { return (e.ctrlKey || e.metaKey) && e.key == \"b\"; }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/react-mde/lib/js/commands/default-commands/boldCommand.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boldCommand = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\nexports.boldCommand = {\n    buttonProps: { \"aria-label\": \"Add bold text\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        // Adjust the selection to encompass the whole word if the caret is inside one\n        var newSelectionRange = MarkdownUtil_1.selectWord({\n            text: initialState.text,\n            selection: initialState.selection\n        });\n        var state1 = textApi.setSelectionRange(newSelectionRange);\n        // Replaces the current selection with the bold mark up\n        var state2 = textApi.replaceSelection(\"**\" + state1.selectedText + \"**\");\n        // Adjust the selection to not contain the **\n        textApi.setSelectionRange({\n            start: state2.selection.end - 2 - state1.selectedText.length,\n            end: state2.selection.end - 2\n        });\n    },\n    handleKeyCommand: function (e) { return (e.ctrlKey || e.metaKey) && e.key == \"b\"; }\n};\n"},"lineCount":25}},"error":null,"hash":"4c0bc716a9450f035d970f54e6c8fa02","cacheData":{"env":{}}}